syntax = "proto3";

package gpcloud.api.cloud.v1;

import "google/protobuf/timestamp.proto";
import "gpcloud/api/cloud/v1/user.proto";
import "gpcloud/api/cloud/v1/payment.proto";
import "gpcloud/api/cloud/v1/region.proto";
import "gpcloud/api/cloud/v1/flavour.proto";
import "gpcloud/api/cloud/v1/billing.proto";
import "gpcloud/type/v1/price.proto";
import "gpcloud/type/v1/ssh_key.proto";

enum ProjectEnvironment {
  PROJECT_ENVIRONMENT_UNSPECIFIED = 0;
  PROJECT_ENVIRONMENT_DEVELOPMENT = 1;
  PROJECT_ENVIRONMENT_STAGING = 2;
  PROJECT_ENVIRONMENT_PRODUCTION = 3;
}

enum ProjectMemberRole {
  PROJECT_MEMBER_ROLE_UNSPECIFIED = 0;
  PROJECT_MEMBER_ROLE_OWNER = 1;
  PROJECT_MEMBER_ROLE_MEMBER = 2;
}

message ProjectMember {
  gpcloud.api.cloud.v1.BasicUser user = 1;

  gpcloud.api.cloud.v1.ProjectMemberRole role = 2;

  bool confirmed = 3;

  bool default = 4;

  google.protobuf.Timestamp created_at = 1000;
  google.protobuf.Timestamp updated_at = 1001;
}

message BasicProject {
  string id = 1;
  string name = 2;
  string avatar_url = 4;
}

message Project {
  string id = 1;

  // Project name
  string name = 2;

  // Project description
  string description = 3;

  // Avatar URL
  string avatar_url = 4;

  // Currency used for that specific project
  gpcloud.api.cloud.v1.Currency currency = 5;

  // Project environment (test, staging, production, ...)
  gpcloud.api.cloud.v1.ProjectEnvironment environment = 6;

  // Members
  repeated gpcloud.api.cloud.v1.ProjectMember members = 7;

  // Linked credit card
  gpcloud.api.cloud.v1.CreditCard credit_card = 8;

  // Linked billing address
  gpcloud.api.cloud.v1.BillingAddress billing_address = 9;

  // Payment method
  gpcloud.api.cloud.v1.PaymentMethod payment_method = 10;

  // Allowed payment methods
  repeated gpcloud.api.cloud.v1.PaymentMethod allowed_payment_methods = 11;

  // If the project is billable
  bool payment = 12;

  // Project timestamps
  google.protobuf.Timestamp created_at = 1000;
  google.protobuf.Timestamp updated_at = 1001;
}

message ProjectLog {
  string id = 1;

  gpcloud.api.cloud.v1.BasicUser user = 2;

  string message = 3;

  google.protobuf.Timestamp created_at = 1000;
  google.protobuf.Timestamp updated_at = 1001;
}

message ProjectInvite {
  string id = 1;

  gpcloud.api.cloud.v1.BasicProject project = 2;

  google.protobuf.Timestamp created_at = 1000;
}

message ProjectSSHKey {
  gpcloud.type.v1.SSHKey ssh_key = 1;

  gpcloud.api.cloud.v1.BasicUser user = 2;
}

message OutstandingBalance {
  gpcloud.type.v1.Price amount = 1;

  gpcloud.api.cloud.v1.BasicProject project = 2;
}

message ProjectComputeDiscount {
  string id = 1;

  // Optional limit for flavours
  gpcloud.api.cloud.v1.Flavour flavour = 2;

  // Optional limit for datacenter
  gpcloud.api.cloud.v1.Datacenter datacenter = 3;

  oneof discount {
    int32 percent = 4;
    gpcloud.type.v1.Price monthly_price = 5;
  }
  // When true, we do not charge for any SPLA license
  bool inclusive_spla = 6;

  // When true, we do not charge for any traffic
  bool inclusive_traffic = 7;
}